// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		08/09/2015 09:16:38
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Collections.Generic;
using Xbim.Common;

namespace Xbim.Ifc2x3.Kernel
{
	[EntityName("IFCOBJECTDEFINITION")]
	public abstract partial class @IfcObjectDefinition : IfcRoot
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcObjectDefinition(IModel model) : base(model) 		{ 
			Model = model; 
		}

		#region Explicit attribute fields
		#endregion
	
		#region Explicit attribute properties
		#endregion

		#region Inverse attributes
		public IEnumerable<IfcRelAssigns> @HasAssignments 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelAssigns>(e => e.RelatedObjects != null &&  e.RelatedObjects.Contains(this));
			} 
		}
	
		public IEnumerable<IfcRelDecomposes> @IsDecomposedBy 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelDecomposes>(e => e.RelatingObject == this);
			} 
		}
	
		public IEnumerable<IfcRelDecomposes> @Decomposes 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelDecomposes>(e => e.RelatedObjects != null &&  e.RelatedObjects.Contains(this));
			} 
		}
	
		public IEnumerable<IfcRelAssociates> @HasAssociations 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelAssociates>(e => e.RelatedObjects != null &&  e.RelatedObjects.Contains(this));
			} 
		}
	

		#endregion


		#region IPersist implementation
		#endregion

	}
}