// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		22.09.2015 02:32:11
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using Xbim.Common.Step21;

namespace Xbim.Common
{
	public interface IModel
	{
		IStepFileHeader Header { get; }

		bool IsTransactional { get; }

	    IEntityCollection Instances { get; }

	    int Activate(IPersistEntity owningEntity, bool write);
		
		ITransaction BeginTransaction(string name);
		
		/// <summary>
        /// It is a good practise to implement this property with WeakReference back field so it gets disposed 
		/// when transaction goes out of the scope. It would stay allive otherwise which is not desired unless you 
		/// want to keep it for undo-redo sessions. But even it that case it should be referenced from elsewhere.
        /// </summary>
		ITransaction CurrentTransaction { get; }

		System.Reflection.Module SchemaModule { get; }
	}
}
