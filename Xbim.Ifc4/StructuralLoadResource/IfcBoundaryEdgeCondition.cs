// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		24.09.2015 10:03:39
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.MeasureResource;
using System.Collections.Generic;
using Xbim.Common;
using Xbim.Common.Exceptions;

namespace Xbim.Ifc4.StructuralLoadResource
{
	[IndexedClass]
	[ExpressType("IFCBOUNDARYEDGECONDITION", 439)]
	// ReSharper disable once PartialTypeWithSinglePart
	public  partial class @IfcBoundaryEdgeCondition : IfcBoundaryCondition, IInstantiableEntity
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcBoundaryEdgeCondition(IModel model) : base(model) 		{ 
			Model = model; 
		}

		#region Explicit attribute fields
		private IfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthX;
		private IfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthY;
		private IfcModulusOfTranslationalSubgradeReactionSelect _translationalStiffnessByLengthZ;
		private IfcModulusOfRotationalSubgradeReactionSelect _rotationalStiffnessByLengthX;
		private IfcModulusOfRotationalSubgradeReactionSelect _rotationalStiffnessByLengthY;
		private IfcModulusOfRotationalSubgradeReactionSelect _rotationalStiffnessByLengthZ;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(2, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfTranslationalSubgradeReactionSelect @TranslationalStiffnessByLengthX 
		{ 
			get 
			{
				if(Activated) return _translationalStiffnessByLengthX;
				
				Model.Activate(this, true);
				Activated = true;
				return _translationalStiffnessByLengthX;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByLengthX = v, _translationalStiffnessByLengthX, value,  "TranslationalStiffnessByLengthX");
			} 
		}
	
		[EntityAttribute(3, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfTranslationalSubgradeReactionSelect @TranslationalStiffnessByLengthY 
		{ 
			get 
			{
				if(Activated) return _translationalStiffnessByLengthY;
				
				Model.Activate(this, true);
				Activated = true;
				return _translationalStiffnessByLengthY;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByLengthY = v, _translationalStiffnessByLengthY, value,  "TranslationalStiffnessByLengthY");
			} 
		}
	
		[EntityAttribute(4, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfTranslationalSubgradeReactionSelect @TranslationalStiffnessByLengthZ 
		{ 
			get 
			{
				if(Activated) return _translationalStiffnessByLengthZ;
				
				Model.Activate(this, true);
				Activated = true;
				return _translationalStiffnessByLengthZ;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByLengthZ = v, _translationalStiffnessByLengthZ, value,  "TranslationalStiffnessByLengthZ");
			} 
		}
	
		[EntityAttribute(5, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfRotationalSubgradeReactionSelect @RotationalStiffnessByLengthX 
		{ 
			get 
			{
				if(Activated) return _rotationalStiffnessByLengthX;
				
				Model.Activate(this, true);
				Activated = true;
				return _rotationalStiffnessByLengthX;
			} 
			set
			{
				SetValue( v =>  _rotationalStiffnessByLengthX = v, _rotationalStiffnessByLengthX, value,  "RotationalStiffnessByLengthX");
			} 
		}
	
		[EntityAttribute(6, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfRotationalSubgradeReactionSelect @RotationalStiffnessByLengthY 
		{ 
			get 
			{
				if(Activated) return _rotationalStiffnessByLengthY;
				
				Model.Activate(this, true);
				Activated = true;
				return _rotationalStiffnessByLengthY;
			} 
			set
			{
				SetValue( v =>  _rotationalStiffnessByLengthY = v, _rotationalStiffnessByLengthY, value,  "RotationalStiffnessByLengthY");
			} 
		}
	
		[EntityAttribute(7, EntityAttributeState.Optional, EntityAttributeType.Class, EntityAttributeType.None, -1, -1)]
		public IfcModulusOfRotationalSubgradeReactionSelect @RotationalStiffnessByLengthZ 
		{ 
			get 
			{
				if(Activated) return _rotationalStiffnessByLengthZ;
				
				Model.Activate(this, true);
				Activated = true;
				return _rotationalStiffnessByLengthZ;
			} 
			set
			{
				SetValue( v =>  _rotationalStiffnessByLengthZ = v, _rotationalStiffnessByLengthZ, value,  "RotationalStiffnessByLengthZ");
			} 
		}
	
		#endregion



		#region IPersist implementation
		public  override void Parse(int propIndex, IPropertyValue value)
		{
			switch (propIndex)
			{
				case 0: 
					base.Parse(propIndex, value); 
					return;
				case 1: 
					_translationalStiffnessByLengthX = (IfcModulusOfTranslationalSubgradeReactionSelect)(value.EntityVal);
					return;
				case 2: 
					_translationalStiffnessByLengthY = (IfcModulusOfTranslationalSubgradeReactionSelect)(value.EntityVal);
					return;
				case 3: 
					_translationalStiffnessByLengthZ = (IfcModulusOfTranslationalSubgradeReactionSelect)(value.EntityVal);
					return;
				case 4: 
					_rotationalStiffnessByLengthX = (IfcModulusOfRotationalSubgradeReactionSelect)(value.EntityVal);
					return;
				case 5: 
					_rotationalStiffnessByLengthY = (IfcModulusOfRotationalSubgradeReactionSelect)(value.EntityVal);
					return;
				case 6: 
					_rotationalStiffnessByLengthZ = (IfcModulusOfRotationalSubgradeReactionSelect)(value.EntityVal);
					return;
				default:
					throw new XbimParserException(string.Format("Attribute index {0} is out of range for {1}", propIndex + 1, GetType().Name.ToUpper()));
			}
		}
		
		public  override string WhereRule() 
		{
			return "";
		}
		#endregion
	}
}