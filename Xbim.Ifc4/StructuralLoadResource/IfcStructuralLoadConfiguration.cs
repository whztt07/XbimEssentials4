// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		09/09/2015 04:20:44
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.MeasureResource;
using System.Collections.Generic;
using Xbim.Common;

namespace Xbim.Ifc4.StructuralLoadResource
{
	[EntityName("IFCSTRUCTURALLOADCONFIGURATION", 633)]
	public  partial class @IfcStructuralLoadConfiguration : IfcStructuralLoad, IInstantiableEntity
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcStructuralLoadConfiguration(IModel model) : base(model) 		{ 
			Model = model; 
			_values = new ItemSet<IfcStructuralLoadOrResult>( model );
			_locations = new ItemSet<ItemSet<IfcLengthMeasure>>( model );
		}

		#region Explicit attribute fields
		private ItemSet<IfcStructuralLoadOrResult> _values;
		private ItemSet<ItemSet<IfcLengthMeasure>> _locations;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(1, EntityAttributeState.Mandatory)]
		public ItemSet<IfcStructuralLoadOrResult> @Values 
		{ 
			get 
			{
				if(Activated) return _values;
				
				Model.Activate(this, true);
				Activated = true;
				return _values;
			} 
			set
			{
				SetValue( v =>  _values = v, _values, value,  "Values");
			} 
		}
	
		[EntityAttribute(2, EntityAttributeState.Optional)]
		public ItemSet<ItemSet<IfcLengthMeasure>> @Locations 
		{ 
			get 
			{
				if(Activated) return _locations;
				
				Model.Activate(this, true);
				Activated = true;
				return _locations;
			} 
			set
			{
				SetValue( v =>  _locations = v, _locations, value,  "Locations");
			} 
		}
	
		#endregion

		#region Inverse attributes

		#endregion

		#region Index access
		private readonly List<string> _attributeNames = new List<string>
		{
			"Name",
			"Values",
			"Locations",
		};

		IEnumerable<string> IInstantiableEntity.PropertyNames { get { return _attributeNames; } }

		object IInstantiableEntity.GetValue(int index)
		{
			switch(index)
			{
				case 0: 
					return @Name;
				case 1: 
					return @Values;
				case 2: 
					return @Locations;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		object IInstantiableEntity.GetValue(string name)
		{
			switch(name)
			{
				case "Name":  
					return @Name;
				case "Values":  
					return @Values;
				case "Locations":  
					return @Locations;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(int index, object value)
		{
			switch(index)
			{
				case 0:
					 @Name = (IfcLabel?)value;
					 break;
				case 1:
					 @Values.Add((IfcStructuralLoadOrResult)value);
					 break;
				case 2:
					 @Locations = (ItemSet<ItemSet<IfcLengthMeasure>>)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(string propName, object value)
		{
			switch(propName)
			{
				case "Name":
					 @Name = (IfcLabel?)value;
					 break;
				case "Values":
					 @Values.Add((IfcStructuralLoadOrResult)value);
					 break;
				case "Locations":
					 @Locations = (ItemSet<ItemSet<IfcLengthMeasure>>)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}
		#endregion

		#region Where rules
		/*ValidListSize:	ValidListSize : NOT EXISTS(Locations) OR (SIZEOF(Locations) = SIZEOF(Values));*/
		#endregion

		#region IPersist implementation
		void IPersist.Set(int propIndex, IPropertyValue value)
		{
            throw new System.NotImplementedException();
		}
		#endregion

		public  override string WhereRule() 
		{
			return "";
		}
	}
}