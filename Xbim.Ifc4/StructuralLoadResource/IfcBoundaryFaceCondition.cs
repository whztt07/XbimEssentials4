// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		08/09/2015 09:16:41
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.MeasureResource;
using System.Collections.Generic;
using Xbim.Common;

namespace Xbim.Ifc4.StructuralLoadResource
{
	[EntityName("IFCBOUNDARYFACECONDITION")]
	public  partial class @IfcBoundaryFaceCondition : IfcBoundaryCondition, IInstantiableEntity
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcBoundaryFaceCondition(IModel model) : base(model) 		{ 
			Model = model; 
		}

		#region Explicit attribute fields
		private IfcModulusOfSubgradeReactionSelect _translationalStiffnessByAreaX;
		private IfcModulusOfSubgradeReactionSelect _translationalStiffnessByAreaY;
		private IfcModulusOfSubgradeReactionSelect _translationalStiffnessByAreaZ;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(1, EntityAttributeState.Optional)]
		public IfcModulusOfSubgradeReactionSelect @TranslationalStiffnessByAreaX 
		{ 
			get 
			{
				if(IsActivated) return _translationalStiffnessByAreaX;
				
				Model.Activate(this, true);
				IsActivated = true;
				return _translationalStiffnessByAreaX;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByAreaX = v, _translationalStiffnessByAreaX, value,  "TranslationalStiffnessByAreaX");
			} 
		}
	
		[EntityAttribute(2, EntityAttributeState.Optional)]
		public IfcModulusOfSubgradeReactionSelect @TranslationalStiffnessByAreaY 
		{ 
			get 
			{
				if(IsActivated) return _translationalStiffnessByAreaY;
				
				Model.Activate(this, true);
				IsActivated = true;
				return _translationalStiffnessByAreaY;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByAreaY = v, _translationalStiffnessByAreaY, value,  "TranslationalStiffnessByAreaY");
			} 
		}
	
		[EntityAttribute(3, EntityAttributeState.Optional)]
		public IfcModulusOfSubgradeReactionSelect @TranslationalStiffnessByAreaZ 
		{ 
			get 
			{
				if(IsActivated) return _translationalStiffnessByAreaZ;
				
				Model.Activate(this, true);
				IsActivated = true;
				return _translationalStiffnessByAreaZ;
			} 
			set
			{
				SetValue( v =>  _translationalStiffnessByAreaZ = v, _translationalStiffnessByAreaZ, value,  "TranslationalStiffnessByAreaZ");
			} 
		}
	
		#endregion

		#region Inverse attributes

		#endregion

		#region Index access
		private readonly List<string> _attributeNames = new List<string>
		{
			"Name",
			"TranslationalStiffnessByAreaX",
			"TranslationalStiffnessByAreaY",
			"TranslationalStiffnessByAreaZ",
		};

		IEnumerable<string> IInstantiableEntity.PropertyNames { get { return _attributeNames; } }

		object IInstantiableEntity.GetValue(int index)
		{
			switch(index)
			{
				case 0: 
					return @Name;
				case 1: 
					return @TranslationalStiffnessByAreaX;
				case 2: 
					return @TranslationalStiffnessByAreaY;
				case 3: 
					return @TranslationalStiffnessByAreaZ;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		object IInstantiableEntity.GetValue(string name)
		{
			switch(name)
			{
				case "Name":  
					return @Name;
				case "TranslationalStiffnessByAreaX":  
					return @TranslationalStiffnessByAreaX;
				case "TranslationalStiffnessByAreaY":  
					return @TranslationalStiffnessByAreaY;
				case "TranslationalStiffnessByAreaZ":  
					return @TranslationalStiffnessByAreaZ;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(int index, object value)
		{
			switch(index)
			{
				case 0:
					 @Name = (IfcLabel?)value;
					 break;
				case 1:
					 @TranslationalStiffnessByAreaX = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				case 2:
					 @TranslationalStiffnessByAreaY = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				case 3:
					 @TranslationalStiffnessByAreaZ = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(string propName, object value)
		{
			switch(propName)
			{
				case "Name":
					 @Name = (IfcLabel?)value;
					 break;
				case "TranslationalStiffnessByAreaX":
					 @TranslationalStiffnessByAreaX = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				case "TranslationalStiffnessByAreaY":
					 @TranslationalStiffnessByAreaY = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				case "TranslationalStiffnessByAreaZ":
					 @TranslationalStiffnessByAreaZ = (IfcModulusOfSubgradeReactionSelect)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}
		#endregion


		#region IPersist implementation
		public void Set(int propIndex, IPropertyValue value)
		{
            throw new System.NotImplementedException();
		}
		#endregion

	}
}