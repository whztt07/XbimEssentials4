// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		09/09/2015 04:20:44
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.MeasureResource;
using Xbim.Ifc4.ExternalReferenceResource;
using System.Collections.Generic;
using Xbim.Common;

namespace Xbim.Ifc4.ActorResource
{
	[EntityName("IFCTELECOMADDRESS", 694)]
	public  partial class @IfcTelecomAddress : IfcAddress, IInstantiableEntity
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcTelecomAddress(IModel model) : base(model) 		{ 
			Model = model; 
			_telephoneNumbers = new ItemSet<IfcLabel>( model );
			_facsimileNumbers = new ItemSet<IfcLabel>( model );
			_electronicMailAddresses = new ItemSet<IfcLabel>( model );
			_messagingIDs = new ItemSet<IfcURIReference>( model );
		}

		#region Explicit attribute fields
		private ItemSet<IfcLabel> _telephoneNumbers;
		private ItemSet<IfcLabel> _facsimileNumbers;
		private IfcLabel? _pagerNumber;
		private ItemSet<IfcLabel> _electronicMailAddresses;
		private IfcURIReference? _wWWHomePageURL;
		private ItemSet<IfcURIReference> _messagingIDs;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(3, EntityAttributeState.Optional)]
		public ItemSet<IfcLabel> @TelephoneNumbers 
		{ 
			get 
			{
				if(Activated) return _telephoneNumbers;
				
				Model.Activate(this, true);
				Activated = true;
				return _telephoneNumbers;
			} 
			set
			{
				SetValue( v =>  _telephoneNumbers = v, _telephoneNumbers, value,  "TelephoneNumbers");
			} 
		}
	
		[EntityAttribute(4, EntityAttributeState.Optional)]
		public ItemSet<IfcLabel> @FacsimileNumbers 
		{ 
			get 
			{
				if(Activated) return _facsimileNumbers;
				
				Model.Activate(this, true);
				Activated = true;
				return _facsimileNumbers;
			} 
			set
			{
				SetValue( v =>  _facsimileNumbers = v, _facsimileNumbers, value,  "FacsimileNumbers");
			} 
		}
	
		[EntityAttribute(5, EntityAttributeState.Optional)]
		public IfcLabel? @PagerNumber 
		{ 
			get 
			{
				if(Activated) return _pagerNumber;
				
				Model.Activate(this, true);
				Activated = true;
				return _pagerNumber;
			} 
			set
			{
				SetValue( v =>  _pagerNumber = v, _pagerNumber, value,  "PagerNumber");
			} 
		}
	
		[EntityAttribute(6, EntityAttributeState.Optional)]
		public ItemSet<IfcLabel> @ElectronicMailAddresses 
		{ 
			get 
			{
				if(Activated) return _electronicMailAddresses;
				
				Model.Activate(this, true);
				Activated = true;
				return _electronicMailAddresses;
			} 
			set
			{
				SetValue( v =>  _electronicMailAddresses = v, _electronicMailAddresses, value,  "ElectronicMailAddresses");
			} 
		}
	
		[EntityAttribute(7, EntityAttributeState.Optional)]
		public IfcURIReference? @WWWHomePageURL 
		{ 
			get 
			{
				if(Activated) return _wWWHomePageURL;
				
				Model.Activate(this, true);
				Activated = true;
				return _wWWHomePageURL;
			} 
			set
			{
				SetValue( v =>  _wWWHomePageURL = v, _wWWHomePageURL, value,  "WWWHomePageURL");
			} 
		}
	
		[EntityAttribute(8, EntityAttributeState.Optional)]
		public ItemSet<IfcURIReference> @MessagingIDs 
		{ 
			get 
			{
				if(Activated) return _messagingIDs;
				
				Model.Activate(this, true);
				Activated = true;
				return _messagingIDs;
			} 
			set
			{
				SetValue( v =>  _messagingIDs = v, _messagingIDs, value,  "MessagingIDs");
			} 
		}
	
		#endregion

		#region Inverse attributes

		#endregion

		#region Index access
		private readonly List<string> _attributeNames = new List<string>
		{
			"Purpose",
			"Description",
			"UserDefinedPurpose",
			"TelephoneNumbers",
			"FacsimileNumbers",
			"PagerNumber",
			"ElectronicMailAddresses",
			"WWWHomePageURL",
			"MessagingIDs",
		};

		IEnumerable<string> IInstantiableEntity.PropertyNames { get { return _attributeNames; } }

		object IInstantiableEntity.GetValue(int index)
		{
			switch(index)
			{
				case 0: 
					return @Purpose;
				case 1: 
					return @Description;
				case 2: 
					return @UserDefinedPurpose;
				case 3: 
					return @TelephoneNumbers;
				case 4: 
					return @FacsimileNumbers;
				case 5: 
					return @PagerNumber;
				case 6: 
					return @ElectronicMailAddresses;
				case 7: 
					return @WWWHomePageURL;
				case 8: 
					return @MessagingIDs;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		object IInstantiableEntity.GetValue(string name)
		{
			switch(name)
			{
				case "Purpose":  
					return @Purpose;
				case "Description":  
					return @Description;
				case "UserDefinedPurpose":  
					return @UserDefinedPurpose;
				case "TelephoneNumbers":  
					return @TelephoneNumbers;
				case "FacsimileNumbers":  
					return @FacsimileNumbers;
				case "PagerNumber":  
					return @PagerNumber;
				case "ElectronicMailAddresses":  
					return @ElectronicMailAddresses;
				case "WWWHomePageURL":  
					return @WWWHomePageURL;
				case "MessagingIDs":  
					return @MessagingIDs;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(int index, object value)
		{
			switch(index)
			{
				case 0:
					 @Purpose = (IfcAddressTypeEnum?)value;
					 break;
				case 1:
					 @Description = (IfcText?)value;
					 break;
				case 2:
					 @UserDefinedPurpose = (IfcLabel?)value;
					 break;
				case 3:
					 @TelephoneNumbers = (ItemSet<IfcLabel>)value;
					 break;
				case 4:
					 @FacsimileNumbers = (ItemSet<IfcLabel>)value;
					 break;
				case 5:
					 @PagerNumber = (IfcLabel?)value;
					 break;
				case 6:
					 @ElectronicMailAddresses = (ItemSet<IfcLabel>)value;
					 break;
				case 7:
					 @WWWHomePageURL = (IfcURIReference?)value;
					 break;
				case 8:
					 @MessagingIDs = (ItemSet<IfcURIReference>)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}

		void IInstantiableEntity.SetValue(string propName, object value)
		{
			switch(propName)
			{
				case "Purpose":
					 @Purpose = (IfcAddressTypeEnum?)value;
					 break;
				case "Description":
					 @Description = (IfcText?)value;
					 break;
				case "UserDefinedPurpose":
					 @UserDefinedPurpose = (IfcLabel?)value;
					 break;
				case "TelephoneNumbers":
					 @TelephoneNumbers = (ItemSet<IfcLabel>)value;
					 break;
				case "FacsimileNumbers":
					 @FacsimileNumbers = (ItemSet<IfcLabel>)value;
					 break;
				case "PagerNumber":
					 @PagerNumber = (IfcLabel?)value;
					 break;
				case "ElectronicMailAddresses":
					 @ElectronicMailAddresses = (ItemSet<IfcLabel>)value;
					 break;
				case "WWWHomePageURL":
					 @WWWHomePageURL = (IfcURIReference?)value;
					 break;
				case "MessagingIDs":
					 @MessagingIDs = (ItemSet<IfcURIReference>)value;
					 break;
				default:
					throw new System.IndexOutOfRangeException();
			}
		}
		#endregion

		#region Where rules
		/*MinimumDataProvided:                            EXISTS (MessagingIDs);*/
		#endregion

		#region IPersist implementation
		void IPersist.Set(int propIndex, IPropertyValue value)
		{
            throw new System.NotImplementedException();
		}
		#endregion

		public  override string WhereRule() 
		{
			return "";
		}
	}
}