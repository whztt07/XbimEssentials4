// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		08/09/2015 02:29:20
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.MeasureResource;
using Xbim.Ifc4.RepresentationResource;
using System.Collections.Generic;
using Xbim.Common;

namespace Xbim.Ifc4.Kernel
{
	[EntityName("IFCCONTEXT", 134)]
	public abstract partial class @IfcContext : IfcObjectDefinition
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcContext(IModel model) : base(model) 		{ 
			Model = model; 
			_representationContexts = new ItemSet<IfcRepresentationContext>( model );
		}

		#region Explicit attribute fields
		private IfcLabel? _objectType;
		private IfcLabel? _longName;
		private IfcLabel? _phase;
		private ItemSet<IfcRepresentationContext> _representationContexts;
		private IfcUnitAssignment _unitsInContext;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(4, EntityAttributeState.Optional)]
		public IfcLabel? @ObjectType 
		{ 
			get 
			{
				if(Activated) return _objectType;
				
				Model.Activate(this, true);
				Activated = true;
				return _objectType;
			} 
			set
			{
				SetValue( v =>  _objectType = v, _objectType, value,  "ObjectType");
			} 
		}
	
		[EntityAttribute(5, EntityAttributeState.Optional)]
		public IfcLabel? @LongName 
		{ 
			get 
			{
				if(Activated) return _longName;
				
				Model.Activate(this, true);
				Activated = true;
				return _longName;
			} 
			set
			{
				SetValue( v =>  _longName = v, _longName, value,  "LongName");
			} 
		}
	
		[EntityAttribute(6, EntityAttributeState.Optional)]
		public IfcLabel? @Phase 
		{ 
			get 
			{
				if(Activated) return _phase;
				
				Model.Activate(this, true);
				Activated = true;
				return _phase;
			} 
			set
			{
				SetValue( v =>  _phase = v, _phase, value,  "Phase");
			} 
		}
	
		[EntityAttribute(7, EntityAttributeState.Optional)]
		public ItemSet<IfcRepresentationContext> @RepresentationContexts 
		{ 
			get 
			{
				if(Activated) return _representationContexts;
				
				Model.Activate(this, true);
				Activated = true;
				return _representationContexts;
			} 
			set
			{
				SetValue( v =>  _representationContexts = v, _representationContexts, value,  "RepresentationContexts");
			} 
		}
	
		[EntityAttribute(8, EntityAttributeState.Optional)]
		public IfcUnitAssignment @UnitsInContext 
		{ 
			get 
			{
				if(Activated) return _unitsInContext;
				
				Model.Activate(this, true);
				Activated = true;
				return _unitsInContext;
			} 
			set
			{
				SetValue( v =>  _unitsInContext = v, _unitsInContext, value,  "UnitsInContext");
			} 
		}
	
		#endregion

		#region Inverse attributes
		public IEnumerable<IfcRelDefinesByProperties> @IsDefinedBy 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelDefinesByProperties>(e => e.RelatedObjects != null &&  e.RelatedObjects.Contains(this));
			} 
		}
	
		public IEnumerable<IfcRelDeclares> @Declares 
		{ 
			get 
			{
				return Model.Instances.Where<IfcRelDeclares>(e => e.RelatingContext == this);
			} 
		}
	

		#endregion


		#region IPersist implementation
		#endregion

	}
}