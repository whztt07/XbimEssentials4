// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool Xbim.CodeGeneration 
//		08/09/2015 09:16:41
//  
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Xbim.Ifc4.Kernel;
using Xbim.Ifc4.QuantityResource;
using Xbim.Ifc4.CostResource;
using Xbim.Common;

namespace Xbim.Ifc4.ConstructionMgmtDomain
{
	[EntityName("IFCCONSTRUCTIONRESOURCETYPE")]
	public abstract partial class @IfcConstructionResourceType : IfcTypeResource
	{
		//internal constructor makes sure that objects are not created outside of the model/ assembly controlled area
		internal IfcConstructionResourceType(IModel model) : base(model) 		{ 
			Model = model; 
			_baseCosts = new ItemSet<IfcAppliedValue>( model );
		}

		#region Explicit attribute fields
		private ItemSet<IfcAppliedValue> _baseCosts;
		private IfcPhysicalQuantity _baseQuantity;
		#endregion
	
		#region Explicit attribute properties
		[EntityAttribute(9, EntityAttributeState.Optional)]
		public ItemSet<IfcAppliedValue> @BaseCosts 
		{ 
			get 
			{
				if(IsActivated) return _baseCosts;
				
				Model.Activate(this, true);
				IsActivated = true;
				return _baseCosts;
			} 
			set
			{
				SetValue( v =>  _baseCosts = v, _baseCosts, value,  "BaseCosts");
			} 
		}
	
		[EntityAttribute(10, EntityAttributeState.Optional)]
		public IfcPhysicalQuantity @BaseQuantity 
		{ 
			get 
			{
				if(IsActivated) return _baseQuantity;
				
				Model.Activate(this, true);
				IsActivated = true;
				return _baseQuantity;
			} 
			set
			{
				SetValue( v =>  _baseQuantity = v, _baseQuantity, value,  "BaseQuantity");
			} 
		}
	
		#endregion

		#region Inverse attributes

		#endregion


		#region IPersist implementation
		#endregion

	}
}